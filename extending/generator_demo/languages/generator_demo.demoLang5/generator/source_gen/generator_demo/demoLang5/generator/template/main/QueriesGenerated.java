package generator_demo.demoLang5.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.generator.template.MappingScriptContext;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import generator_demo.demoLang5.generator.util.TextUtil;

public class QueriesGenerated {
  public static boolean baseMappingRule_Condition_881719319960630114(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name").equals("button");
  }

  public static boolean baseMappingRule_Condition_881719319960668103(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name").equals("label");
  }

  public static boolean baseMappingRule_Condition_881719319962313805(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name").equals("panel");
  }

  public static Object propertyMacro_GetPropertyValue_881719319962284121(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.createUniqueName(_context.getTemplateValue(), null);
  }

  public static Object propertyMacro_GetPropertyValue_881719319961327566(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "attribute", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name").equals("text");
      }
    }), "value");
  }

  public static Object propertyMacro_GetPropertyValue_881719319960731125(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.createUniqueName(_context.getTemplateValue(), null);
  }

  public static Object propertyMacro_GetPropertyValue_881719319961478933(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "attribute", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name").equals("text");
      }
    }), "value");
  }

  public static Object propertyMacro_GetPropertyValue_881719319960725144(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.createUniqueName(_context.getTemplateValue(), null);
  }

  public static Object propertyMacro_GetPropertyValue_881719319961676800(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "value").equals("true");
  }

  public static Object referenceMacro_GetReferent_3447261662750951921(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "method");
  }

  public static Object referenceMacro_GetReferent_881719319962228037(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "value");
  }

  public static Object referenceMacro_GetReferent_881719319960567796(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "rootElement", true), "method");
  }

  public static boolean ifMacro_Condition_881719319961145245(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "attribute", true)).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name").equals("text");
      }
    });
  }

  public static boolean ifMacro_Condition_881719319961478955(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "attribute", true)).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name").equals("text");
      }
    });
  }

  public static SNode sourceNodeQuery_3447261662750937756(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_881719319961598405(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "attribute", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name").equals("enabled");
      }
    });
  }

  public static SNode sourceNodeQuery_881719319962103039(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "attribute", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name").equals("background");
      }
    });
  }

  public static Iterable sourceNodesQuery_3447261662750920944(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "content", true);
  }

  public static Iterable sourceNodesQuery_881719319960557524(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.sampleXML.structure.Document");
  }

  public static Iterable sourceNodesQuery_881719319962404849(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.sampleXML.structure.Element");
  }

  public static void mappingScript_CodeBlock_3447261662751286974(final IOperationContext operationContext, final MappingScriptContext _context) {
    List<SNode> texts = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.sampleXML.structure.Text");
    for (SNode text : ListSequence.fromList(texts)) {
      // replace with a 'label' element 
      SNode label = SNodeOperations.replaceWithNewChild(text, "jetbrains.mps.sampleXML.structure.Element");
      SPropertyOperations.set(label, "name", "label");
      // add the text attribute to the 'label' element 
      SNode attribute = SLinkOperations.addNewChild(label, "attribute", "jetbrains.mps.sampleXML.structure.Attribute");
      SPropertyOperations.set(attribute, "name", "text");
      SPropertyOperations.set(attribute, "value", SPropertyOperations.getString(text, "text"));
    }
  }

  public static void mappingScript_CodeBlock_9141626058198158779(final IOperationContext operationContext, final MappingScriptContext _context) {
    TextUtil.fixText(_context.getModel());
  }
}
