package matrix.generator.template.main;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.TemplateQueryContextWithMacro;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class QueriesGenerated {
  public static SNode insertMacro_Query_4502367365093342202(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    SNode rowSize = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.NumberLiteral", null);
    SPropertyOperations.set(rowSize, "value", String.valueOf(ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "cols", true)).first(), "elements", true)).count()));
    return rowSize;
  }

  public static SNode insertMacro_Query_4502367365093594161(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    SNode colSize = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.NumberLiteral", null);
    SPropertyOperations.set(colSize, "value", String.valueOf(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "cols", true)).count()));
    return colSize;
  }
}
